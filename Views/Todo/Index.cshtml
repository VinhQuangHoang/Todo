@model List<Todo>
@{
    ViewData["Title"] = "Todo List";

    Pager pager = new Pager();

    int pageNo = 0;
    if(ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}
<h1 class="display-4">Todo list</h1>
<p>
    @Html.ActionLink("Create New", "AjaxCreate")
</p>

<form asp-controller="Todo" asp-action="Index">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchText" value="@ViewBag.SearchText" placeholder="Search key" />
            <input type="submit" value="Search" class="p-1 ml-2 btn btn-sm btn-info" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<div class="container-fluid">
    
    
    <div class="col-12">
        <table class="table table-striped" id="js-todo-table">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Title</th>
                    <th scope="col">Desciption</th>
                </tr>
            </thead>
            <tbody>
                @{ var index = 1;}
                @foreach (var item in Model)
                {
                    <tr>
                        <th scope="row">@(index++)</th>
                        <td>@item.Title</td>
                        <td>@item.Description</td>
                        @*<td>
                            <a href="#" data-id="@item.Id" class="btn btn-danger js-btn-update" role="button" aria-pressed="true">
                                Update
                            </a>
                        </td>*@
                        <td>
                            <a href="#" data-id="@item.Id" class="btn btn-danger js-btn-delete" role="button" aria-pressed="true">
                                Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="container">
    @if (pager.TotalPages > 0) 
    {
        <ul class="pagination justify-content-end">
            @if(pager.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Todo" asp-action="Index" asp-route-pg="1"> First </a>
                </li>
                <li  class="page-item">
                    <a class="page-link" asp-controller="Todo" asp-action="Index" asp-route-pg="@(pager.CurrentPage - 1)"> Previous </a>
                </li>
            }


            @for(var pge = pager.StartPage; pge <= pager.EndPage; pge++)
            {
                <li class="page-item @(pge == pager.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-controller="Todo" asp-action="Index" asp-route-pg="@pge"> @pge </a>
                </li>
            }



            @if(pager.CurrentPage < pager.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Todo" asp-action="Index" asp-route-pg="@(pager.CurrentPage + 1)"> Next </a>
                </li>
                <li  class="page-item">
                    <a class="page-link" asp-controller="Todo" asp-action="Index" asp-route-pg="@(pager.TotalPages)"> Last </a>
                </li>
            }
      </ul>
    }

</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            //console.log("ready!");
            $('#js-todo-table').on('click', '.js-btn-delete', function () {
                //console.log("submitted");
                var $this = $(this);
                var id = $this.data('id');
                var result = confirm("Do you want to delete this Todo?");
                if (result) {
                    $.post('/Todo/Delete', {
                        id: id,
                    }).done(function (data) {
                        if (data === true) {
                            $this.closest('tr').remove();
                        }
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        console.log(textStatus + ': ' + errorThrown);
                    });
                }
            })
        })
    </script>
}